# also used for docker-compose
# https://github.com/spring-projects/spring-boot/issues/24229#issuecomment-783343327
spring.config.import=optional:file:.env[.properties]
# app
app.allowed.origins=${SPRING_ALLOWED_ORIGINS:http://localhost:3000}
#
# mongodb
#spring.data.mongodb.uri=${SPRING_MONGODB_URI:}
#spring.data.mongodb.database=${SPRING_MONGODB_DATABASE:}
#spring.data.mongodb.auto-index-creation=true
#
# mysql
spring.datasource.url=${SPRING_MYSQL_URL:jdbc:mysql://${SPRING_MYSQL_HOST:localhost}:${SPRING_MYSQL_PORT:3306}/${SPRING_MYSQL_DATABASE:}}
spring.datasource.username=${SPRING_MYSQL_USERNAME:}
spring.datasource.password=${SPRING_MYSQL_PASSWORD:}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.format_sql=true
#
# jwt
# 1 * 60 * 60 * 1000 (1 hour)
app.jwt.expired=${SPRING_JWT_EXPIRED:}
app.jwt.issuer=${SPRING_JWT_ISSUER:}
#
# email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SPRING_EMAIL_USERNAME:}
spring.mail.password=${SPRING_EMAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
#
# email app
app.email.from=${SPRING_EMAIL_FROM:}
#
# cloudinary
app.cloudinary.name=${SPRING_CLOUDINARY_NAME:}
app.cloudinary.api.key=${SPRING_CLOUDINARY_API_KEY:}
app.cloudinary.api.secret=${SPRING_CLOUDINARY_API_SECRET:}
#
# domain
app.domain.client=${SPRING_CLIENT_HOST:}